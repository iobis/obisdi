[{"path":[]},{"path":"https://iobis.github.io/obisdi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://iobis.github.io/obisdi/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://iobis.github.io/obisdi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Silas C. Principe. Author, maintainer.","code":""},{"path":"https://iobis.github.io/obisdi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Principe S (2023). obisdi: Ingest Marine Biodiversity Datasets OBIS. https://iobis.github.io/obisdi, https://github.com/iobis/obisdi.","code":"@Manual{,   title = {obisdi: Ingest Marine Biodiversity Datasets for OBIS},   author = {Silas C. Principe},   year = {2023},   note = {https://iobis.github.io/obisdi, https://github.com/iobis/obisdi}, }"},{"path":"https://iobis.github.io/obisdi/index.html","id":"obisdi-","dir":"","previous_headings":"","what":"Ingest Marine Biodiversity Datasets for OBIS","title":"Ingest Marine Biodiversity Datasets for OBIS","text":"Marine biodiversity data ingestion OBIS using reproducible workflow","code":""},{"path":"https://iobis.github.io/obisdi/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Ingest Marine Biodiversity Datasets for OBIS","text":"package still development. install , use:","code":"# install.packages(\"devtools\") devtools::install_github(\"iobis/obisdi\")"},{"path":"https://iobis.github.io/obisdi/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use","title":"Ingest Marine Biodiversity Datasets for OBIS","text":"two main ways using obisdi package: setting new project RStudio using one package functions:","code":""},{"path":"https://iobis.github.io/obisdi/index.html","id":"by-setting-a-new-project","dir":"","previous_headings":"How to use","what":"By setting a new project","title":"Ingest Marine Biodiversity Datasets for OBIS","text":"installed package, can set new project follow standard obisdi. RStudio, go “File > New Project”  Choose “New directory”  , select Marine Biodiversity data ingestion - OBIS format  Supply directory name (don’t use spaces special characters!) dataset name. can also select raw data files included project. use “Data file” box. moment, following formats accepted: zip files csv files case supply zip file composed csv files. can also convert files 50MB lightweight parquet files checking box “Convert parquet”. conversion strongly advised GitHub allow big files uploaded (limit 100MB). may also skip step add data manually “data/raw” folder. also function package pre-processing data (like converting lightweight format).  project done, open new session two main files project: README.md Rmd file data processing.  folder structured using package standard ready use","code":""},{"path":"https://iobis.github.io/obisdi/index.html","id":"using-the-function","dir":"","previous_headings":"How to use","what":"Using the function","title":"Ingest Marine Biodiversity Datasets for OBIS","text":"can set new project folder using function obisdi_create, supplying path new folder.","code":"obisdi_create(path = \"be_marine_data\",               dataset_name = \"Belgium marine dataset\")"},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Darwin Core mapping of events class to Rmarkdown — add_dwc_event","title":"Add Darwin Core mapping of events class to Rmarkdown — add_dwc_event","text":"file enables easily add code chunk fields usually needs mapped describing events type OBIS (well GBIF).","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Darwin Core mapping of events class to Rmarkdown — add_dwc_event","text":"","code":"add_dwc_event(   markup = \"<!--DWC_EVENT-->\",   full = FALSE,   acode = \"dwc\",   object_name = \"dataset\",   rmd_file = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Darwin Core mapping of events class to Rmarkdown — add_dwc_event","text":"markup identifier replaced code chunk containing code perform mapping (see details). full logical indicating want fields available event class just essential ones (FALSE). acode code added start new column names. enables easy tracking new fields easy cleanup end process. object_name name object original fields come. rmd_file optional path Rmd file edited. NULL, usual Rmd file package used.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Darwin Core mapping of events class to Rmarkdown — add_dwc_event","text":"edited Rmarkdown","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Darwin Core mapping of events class to Rmarkdown — add_dwc_event","text":"code work, need first add markup Rmarkdown. , function locate markup substitute formated code chunk. Note can use markup, identifiable within file. Note full contains fields available DwC class. Also, recommended fields class include fields usually included, necessary. See references information. Special attention taken describing events associated occurrences additional fields may needed others omitted table.","code":""},{"path":[]},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_event.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Darwin Core mapping of events class to Rmarkdown — add_dwc_event","text":"","code":"if (FALSE) { add_dwc_event() }"},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_occurrence.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Darwin Core mapping of occurrence class to Rmarkdown — add_dwc_occurrence","title":"Add Darwin Core mapping of occurrence class to Rmarkdown — add_dwc_occurrence","text":"file enables easily add code chunk fields usually needs mapped describing occurrence type OBIS (well GBIF).","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_occurrence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Darwin Core mapping of occurrence class to Rmarkdown — add_dwc_occurrence","text":"","code":"add_dwc_occurrence(   markup = \"<!--DWC_OCCURRENCES-->\",   full = FALSE,   acode = \"dwc\",   object_name = \"dataset\",   rmd_file = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_occurrence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Darwin Core mapping of occurrence class to Rmarkdown — add_dwc_occurrence","text":"markup identifier replaced code chunk containing code perform mapping (see details). full logical indicating want fields available event class just essential ones (FALSE). acode code added start new column names. enables easy tracking new fields easy cleanup end process. object_name name object original fields come. rmd_file optional path Rmd file edited. NULL, usual Rmd file package used.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_occurrence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Darwin Core mapping of occurrence class to Rmarkdown — add_dwc_occurrence","text":"edited Rmarkdown","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_occurrence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Darwin Core mapping of occurrence class to Rmarkdown — add_dwc_occurrence","text":"code work, need first add markup Rmarkdown. , function locate markup substitute formated code chunk. Note can use markup, identifiable within file. Note full contains fields available DwC class. Also, recommended fields class include fields usually included, necessary. See references information. Special attention taken describing events associated occurrences additional fields may needed others omitted table.","code":""},{"path":[]},{"path":"https://iobis.github.io/obisdi/reference/add_dwc_occurrence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Darwin Core mapping of occurrence class to Rmarkdown — add_dwc_occurrence","text":"","code":"if (FALSE) { add_dwc_occurrence() }"},{"path":"https://iobis.github.io/obisdi/reference/add_funding.html","id":null,"dir":"Reference","previous_headings":"","what":"Add funding details on README and .Rmd files — add_funding","title":"Add funding details on README and .Rmd files — add_funding","text":"Add funding details README .Rmd files","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_funding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add funding details on README and .Rmd files — add_funding","text":"","code":"add_funding(   fund_message = \"This work was funded by\",   fund_name,   fund_code = NULL,   html_text = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/add_funding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add funding details on README and .Rmd files — add_funding","text":"fund_message character message written fund_name character name funding body fund_code number grant/funding NULL ignore html_text character HTML code inserted funding area. used, parameters ignored.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_funding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add funding details on README and .Rmd files — add_funding","text":"Edited files.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_funding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add funding details on README and .Rmd files — add_funding","text":"","code":"if (FALSE) { add_funding(fund_name = \"My funder\", fund_code = \"1000\") }"},{"path":"https://iobis.github.io/obisdi/reference/add_gitrepo.html","id":null,"dir":"Reference","previous_headings":"","what":"Add GitHub repo address on README and .Rmd files — add_gitrepo","title":"Add GitHub repo address on README and .Rmd files — add_gitrepo","text":"Add GitHub repo address README .Rmd files","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_gitrepo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add GitHub repo address on README and .Rmd files — add_gitrepo","text":"","code":"add_gitrepo(user_name, repo_name = NULL)"},{"path":"https://iobis.github.io/obisdi/reference/add_gitrepo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add GitHub repo address on README and .Rmd files — add_gitrepo","text":"user_name character name GitHub account (usually user name) repo_name character name repository. Except cases repository named differently folder, leave NULL.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_gitrepo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add GitHub repo address on README and .Rmd files — add_gitrepo","text":"Edited files.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_gitrepo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add GitHub repo address on README and .Rmd files — add_gitrepo","text":"","code":"if (FALSE) { add_gitrepo(\"my-git-account\") }"},{"path":"https://iobis.github.io/obisdi/reference/add_institution.html","id":null,"dir":"Reference","previous_headings":"","what":"Add institutional details on README and .Rmd files — add_institution","title":"Add institutional details on README and .Rmd files — add_institution","text":"Add institutional details README .Rmd files","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_institution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add institutional details on README and .Rmd files — add_institution","text":"","code":"add_institution(   inst_message = \"Dataset edited by\",   inst_name,   inst_details = NULL,   html_text = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/add_institution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add institutional details on README and .Rmd files — add_institution","text":"inst_message character message written inst_name character name institution inst_details character details. separated \"|\" html_text character HTML code inserted institutional details area. used, parameters ignored.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_institution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add institutional details on README and .Rmd files — add_institution","text":"Edited files.","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_institution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add institutional details on README and .Rmd files — add_institution","text":"","code":"if (FALSE) { add_institution(inst_name = \"My institution\") }"},{"path":"https://iobis.github.io/obisdi/reference/add_metadata_readme.html","id":null,"dir":"Reference","previous_headings":"","what":"Add metadata details to the README file — add_metadata_readme","title":"Add metadata details to the README file — add_metadata_readme","text":"short description...","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_metadata_readme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add metadata details to the README file — add_metadata_readme","text":"","code":"add_metadata_readme(meta)"},{"path":"https://iobis.github.io/obisdi/reference/add_metadata_readme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add metadata details to the README file — add_metadata_readme","text":"meta data.frame generated one get_ functions containing metadata info. can also pass data frame, provided contain necessary collumns (see details).","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_metadata_readme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add metadata details to the README file — add_metadata_readme","text":"edited README file","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_metadata_readme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add metadata details to the README file — add_metadata_readme","text":"pass data frame, contain one line following collumns: description: description dataset reponame: name repository dataset downloaded doi: DOI date: dataset published authors: author(s) dataset license: license dataset","code":""},{"path":"https://iobis.github.io/obisdi/reference/add_metadata_readme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add metadata details to the README file — add_metadata_readme","text":"","code":"if (FALSE) { add_metadata_readme(meta = metadata_obj) }"},{"path":"https://iobis.github.io/obisdi/reference/dot-meta_person.html","id":null,"dir":"Reference","previous_headings":"","what":"Select name method for the meta_person class — -.meta_person","title":"Select name method for the meta_person class — -.meta_person","text":"Select name method meta_person class","code":""},{"path":"https://iobis.github.io/obisdi/reference/dot-meta_person.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select name method for the meta_person class — -.meta_person","text":"","code":"# S3 method for meta_person -(e1, e2)"},{"path":"https://iobis.github.io/obisdi/reference/dot-meta_person.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select name method for the meta_person class — -.meta_person","text":"e1 object e2 names","code":""},{"path":"https://iobis.github.io/obisdi/reference/dot-meta_person.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select name method for the meta_person class — -.meta_person","text":"new object meta_person","code":""},{"path":"https://iobis.github.io/obisdi/reference/dot-obisdi_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an obisdi standard project — .obisdi_create","title":"Create an obisdi standard project — .obisdi_create","text":"Create obisdi standard project","code":""},{"path":"https://iobis.github.io/obisdi/reference/dot-obisdi_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an obisdi standard project — .obisdi_create","text":"","code":".obisdi_create(path, ...)"},{"path":"https://iobis.github.io/obisdi/reference/dot-obisdi_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an obisdi standard project — .obisdi_create","text":"path path ... parameters passed widget","code":""},{"path":"https://iobis.github.io/obisdi/reference/dot-obisdi_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an obisdi standard project — .obisdi_create","text":"directory","code":""},{"path":"https://iobis.github.io/obisdi/reference/dot-obisdi_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an obisdi standard project — .obisdi_create","text":"","code":"if (FALSE) { obisdi_create(\"my_path\", \"My project\") }"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_geocov.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metadata object for geographical coverage — gen_meta_geocov","title":"Generate metadata object for geographical coverage — gen_meta_geocov","text":"Generate metadata object geographical coverage","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_geocov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metadata object for geographical coverage — gen_meta_geocov","text":"","code":"gen_meta_geocov(   geographicDescription,   westBoundingCoordinate = NULL,   eastBoundingCoordinate = NULL,   northBoundingCoordinate = NULL,   southBoundingCoordinate = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_geocov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metadata object for geographical coverage — gen_meta_geocov","text":"geographicDescription description/name area coverage westBoundingCoordinate, eastBoundingCoordinate, northBoundingCoordinate, southBoundingCoordinate coordinates longitude latitude limits (numeric)","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_geocov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metadata object for geographical coverage — gen_meta_geocov","text":"meta_cov object containing geographical coverage xml","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_geocov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate metadata object for geographical coverage — gen_meta_geocov","text":"","code":"if (FALSE) { gen_meta_geocov(\"The area of study\") }"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_keywords.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metadata object for keywords — gen_meta_keywords","title":"Generate metadata object for keywords — gen_meta_keywords","text":"Generate metadata object keywords","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_keywords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metadata object for keywords — gen_meta_keywords","text":"","code":"gen_meta_keywords(keyword, keywordThesaurus)"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_keywords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metadata object for keywords — gen_meta_keywords","text":"keyword vector containing one various keywords keywordThesaurus one single thesaurus keywords set","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_keywords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metadata object for keywords — gen_meta_keywords","text":"meta_keyword object containing keywords section xml","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_keywords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate metadata object for keywords — gen_meta_keywords","text":"","code":"if (FALSE) { gen_meta_keywords(c(\"Keyword 1\", \"Keyword 2\"), \"Thesaurus of botany\") }"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metadata object for methods info — gen_meta_methods","title":"Generate metadata object for methods info — gen_meta_methods","text":"Generate metadata object methods info","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metadata object for methods info — gen_meta_methods","text":"","code":"gen_meta_methods(   steps_description,   studyExtent,   samplingDescription,   qualityControl = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metadata object for methods info — gen_meta_methods","text":"steps_description vector containing one step descriptions studyExtent extent study area samplingDescription description sampling qualityControl quality control procedure (optional)","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metadata object for methods info — gen_meta_methods","text":"meta_method object containing methods section xml","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate metadata object for methods info — gen_meta_methods","text":"","code":"if (FALSE) { gen_meta_methods(\"The description\", \"The study extent\", \"A sampling description\") }"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_person.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metadata object for individuals — gen_meta_person","title":"Generate metadata object for individuals — gen_meta_person","text":"Generate metadata object individuals","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_person.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metadata object for individuals — gen_meta_person","text":"","code":"gen_meta_person(   givenName,   surName,   organizationName,   positionName,   role = NULL,   phone = NULL,   electronicMailAddress = NULL,   deliveryPoint = NULL,   postalCode = NULL,   city = NULL,   administrativeArea = NULL,   country = NULL,   onlineUrl = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_person.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metadata object for individuals — gen_meta_person","text":"givenName first name surName family name organizationName organization name positionName position name role role organization (optional) phone phone (optional) electronicMailAddress e-mail (optional, recommended) deliveryPoint address related (optional) postalCode postal code (optional) city city (optional) administrativeArea administrative area (optional) country country (ISO conforming, optional) onlineUrl website ORCID page person (optional)","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_person.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metadata object for individuals — gen_meta_person","text":"list containing original values list XML ready objects","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_person.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate metadata object for individuals — gen_meta_person","text":"+ method selecting just one multiple names meta_person object (object generated function). Thus, suppose create object called people three persons: John Doe, Max Planck, Carl Pol. decide one used contact field. can : selected_people <- people + \"John Doe\" Similarly can supply vector: selected_people <- people + c(\"John Doe\", \"Max Planck\") course, names match original ones, otherwise error thrown.","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_person.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate metadata object for individuals — gen_meta_person","text":"","code":"if (FALSE) { people <- gen_meta_person(\"John\", \"Doe\", \"My company\", \"CEO\") people }"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metadata object for project info — gen_meta_project","title":"Generate metadata object for project info — gen_meta_project","text":"Generate metadata object project info","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metadata object for project info — gen_meta_project","text":"","code":"gen_meta_project(   personnel = NULL,   funding = NULL,   studyAreaDescription = NULL,   designDescription = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metadata object for project info — gen_meta_project","text":"personnel object class meta_person generated gen_meta_person optional funding optional studyAreaDescription optional designDescription optional","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metadata object for project info — gen_meta_project","text":"meta_proj object containing project section xml","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_project.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate metadata object for project info — gen_meta_project","text":"can chose several fields fill.","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate metadata object for project info — gen_meta_project","text":"","code":"if (FALSE) { gen_meta_project(funding = \"Funder #0000\") }"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_taxoncov.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metadata object for taxonomic coverage — gen_meta_taxoncov","title":"Generate metadata object for taxonomic coverage — gen_meta_taxoncov","text":"Generate metadata object taxonomic coverage","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_taxoncov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metadata object for taxonomic coverage — gen_meta_taxoncov","text":"","code":"gen_meta_taxoncov(   generalTaxonomicCoverage,   taxonRankName = NULL,   taxonRankValue = NULL,   commonName = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_taxoncov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metadata object for taxonomic coverage — gen_meta_taxoncov","text":"generalTaxonomicCoverage description taxonomic coverage taxonRankName optional taxonRankValue optional commonName optional","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_taxoncov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metadata object for taxonomic coverage — gen_meta_taxoncov","text":"meta_cov object containing taxonomic coverage xml","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_taxoncov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate metadata object for taxonomic coverage — gen_meta_taxoncov","text":"","code":"if (FALSE) { gen_meta_taxoncov(\"Plantae of Europe\") }"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_temporalcov.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate metadata object for temporal coverage — gen_meta_temporalcov","title":"Generate metadata object for temporal coverage — gen_meta_temporalcov","text":"Generate metadata object temporal coverage","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_temporalcov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate metadata object for temporal coverage — gen_meta_temporalcov","text":"","code":"gen_meta_temporalcov(singleDateTime = NULL, beginDate = NULL, endDate = NULL)"},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_temporalcov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate metadata object for temporal coverage — gen_meta_temporalcov","text":"singleDateTime single date coverage beginDate, endDate start (end) date coverage.","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_temporalcov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate metadata object for temporal coverage — gen_meta_temporalcov","text":"meta_cov object containing temporal coverage xml","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_temporalcov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate metadata object for temporal coverage — gen_meta_temporalcov","text":"can supply single date singleDateTime start end date, can supply single date range. cases use format YYYY-MM-DD (ISO conform) just YYYY-MM YYYY","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_meta_temporalcov.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate metadata object for temporal coverage — gen_meta_temporalcov","text":"","code":"if (FALSE) { gen_meta_temporalcov(\"2023-05-05\") }"},{"path":"https://iobis.github.io/obisdi/reference/gen_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an EML metadata file in the XML format to inclusion in the IPT — gen_metadata","title":"Generate an EML metadata file in the XML format to inclusion in the IPT — gen_metadata","text":"EML (Ecological Markup Language) standard format metadata widely used biodiversity databases. function creates standard EML file use submitting data one IPT (https://ipt.gbif.org/manual/en/ipt/latest/).","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an EML metadata file in the XML format to inclusion in the IPT — gen_metadata","text":"","code":"gen_metadata(   outfolder = \"data/processed\",   outfile = \"metadata\",   title,   creator,   metadataProvider,   language,   metadataLanguage,   abstract,   associatedParty = NULL,   coverage = NULL,   purpose = NULL,   contact = NULL,   methods = NULL,   project = NULL,   intellectualRights = NULL,   keywordSet = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/gen_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an EML metadata file in the XML format to inclusion in the IPT — gen_metadata","text":"outfolder folder xml saved outfile name metadata file title title dataset creator creator dataset. meta_person class, created gen_meta_person() metadataProvider provider dataset. meta_person class, created gen_meta_person() language language dataset (ISO conform) metadataLanguage language metadata (ISO conform) abstract abstract project (character) associatedParty associated parties. meta_person class, created gen_meta_person() coverage geographical, taxonomic /temporal coverage. list objects class meta_cov created using gen_meta_geocov(), gen_meta_temporalcov() gen_meta_taxoncov() purpose purpose dataset contact contacts dataset. meta_person class, created gen_meta_person() methods methods project. meta_methods object created gen_meta_methods(). project project info created gen_meta_project() intellectualRights intellectual rights (text) keywordSet keywords. list meta_keyword objects created gen_meta_keywords()","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an EML metadata file in the XML format to inclusion in the IPT — gen_metadata","text":"XML file EML language","code":""},{"path":"https://iobis.github.io/obisdi/reference/gen_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate an EML metadata file in the XML format to inclusion in the IPT — gen_metadata","text":"fields need objects created functions \"gen_meta\" family. field asks list can also supply single object, converted list. information fields, consult following link: https://www.gbif.org/sites/default/files/gbif_resource/resource-80640/gbif_metadata_profile_guide_en_v1.pdf & symbol used text, otherwise reading xml fail. supplying names fields require object type meta_person, can select just couple names full object using \"+\" \"-\" method (details see gen_meta_person()).","code":""},{"path":[]},{"path":"https://iobis.github.io/obisdi/reference/gen_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an EML metadata file in the XML format to inclusion in the IPT — gen_metadata","text":"","code":"if (FALSE) { person <- gen_meta_person(\"John\", \"Doe\", \"Researcher\", \"Institute\") gen_metadata(title = \"My title\", creator = person, metadataProvider = person, language = \"English\", metadataLanguage = \"English\", abstract = \"Some text.\") }"},{"path":"https://iobis.github.io/obisdi/reference/get_figshare.html","id":null,"dir":"Reference","previous_headings":"","what":"Add funding details on README and .Rmd files — get_figshare","title":"Add funding details on README and .Rmd files — get_figshare","text":"Add funding details README .Rmd files","code":""},{"path":"https://iobis.github.io/obisdi/reference/get_figshare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add funding details on README and .Rmd files — get_figshare","text":"","code":"get_figshare(   article_id,   download_files = FALSE,   save_meta = FALSE,   path = NULL )"},{"path":"https://iobis.github.io/obisdi/reference/get_figshare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add funding details on README and .Rmd files — get_figshare","text":"article_id FigShare article ID. number shown end FigShare document URL (e.g. https://figshare.com/articles/dataset/A_comprehensive_dataset_of_the_cold-water_coral_diversity/21997559, case ID 21997559) download_files logical TRUE, files associated FigShare document downloaded \"data/raw\" folder. large timeout set, depending file size advised download separately. download fail, user receive message. save_meta logical indicating metadata saved \"data/raw\" folder. path path save files metadata. standard, save \"data/raw\", working Rmd file, knitting take place folder Rmd file residing. case can either supply adjusted path use ::().","code":""},{"path":"https://iobis.github.io/obisdi/reference/get_figshare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add funding details on README and .Rmd files — get_figshare","text":"list information FigShare article (see details).","code":""},{"path":"https://iobis.github.io/obisdi/reference/get_figshare.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add funding details on README and .Rmd files — get_figshare","text":"returned list contain following fields: title authors description (usually abstract) version (version dataset) date doi license url download_url (URLs download files; list named (file name) lists containing URLs) details relevant metadata ideally included document. Note fields may empty \"try-error\", indicates field available.","code":""},{"path":"https://iobis.github.io/obisdi/reference/get_figshare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add funding details on README and .Rmd files — get_figshare","text":"","code":"if (FALSE) { get_figshare(21997559) }"},{"path":"https://iobis.github.io/obisdi/reference/obisdi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"obisdi: Ingest Marine Biodiversity Datasets for OBIS — obisdi-package","title":"obisdi: Ingest Marine Biodiversity Datasets for OBIS — obisdi-package","text":"Create structure projects data ingestion OBIS.","code":""},{"path":[]},{"path":"https://iobis.github.io/obisdi/reference/obisdi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"obisdi: Ingest Marine Biodiversity Datasets for OBIS — obisdi-package","text":"Maintainer: Silas C. Principe s.principe@unesco.org (ORCID)","code":""},{"path":"https://iobis.github.io/obisdi/reference/obisdi_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an obisdi standard project — obisdi_create","title":"Create an obisdi standard project — obisdi_create","text":"function used ...","code":""},{"path":"https://iobis.github.io/obisdi/reference/obisdi_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an obisdi standard project — obisdi_create","text":"","code":"obisdi_create(path, dataset_name, type = \"general\")"},{"path":"https://iobis.github.io/obisdi/reference/obisdi_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an obisdi standard project — obisdi_create","text":"path (absolute relative) path generate project folder dataset_name character dataset name type type project. moment, \"general\" available.","code":""},{"path":"https://iobis.github.io/obisdi/reference/obisdi_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an obisdi standard project — obisdi_create","text":"structured folder necessary files data processing.","code":""},{"path":"https://iobis.github.io/obisdi/reference/obisdi_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an obisdi standard project — obisdi_create","text":"","code":"if (FALSE) { obisdi_create(\"my_path\", \"My project\") }"},{"path":"https://iobis.github.io/obisdi/reference/obisdi_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Darwin Core mapping using RMarkdown — obisdi_mapping","title":"Darwin Core mapping using RMarkdown — obisdi_mapping","text":"DOCUMENTED","code":""},{"path":"https://iobis.github.io/obisdi/reference/plus-.meta_person.html","id":null,"dir":"Reference","previous_headings":"","what":"Select name method for the meta_person class — +.meta_person","title":"Select name method for the meta_person class — +.meta_person","text":"Select name method meta_person class","code":""},{"path":"https://iobis.github.io/obisdi/reference/plus-.meta_person.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select name method for the meta_person class — +.meta_person","text":"","code":"# S3 method for meta_person +(e1, e2)"},{"path":"https://iobis.github.io/obisdi/reference/plus-.meta_person.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select name method for the meta_person class — +.meta_person","text":"e1 object e2 names","code":""},{"path":"https://iobis.github.io/obisdi/reference/plus-.meta_person.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select name method for the meta_person class — +.meta_person","text":"new object meta_person","code":""},{"path":"https://iobis.github.io/obisdi/reference/print.meta_cov.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the generate_*cov group — print.meta_cov","title":"Print method for the generate_*cov group — print.meta_cov","text":"Print method generate_*cov group","code":""},{"path":"https://iobis.github.io/obisdi/reference/print.meta_cov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the generate_*cov group — print.meta_cov","text":"","code":"# S3 method for meta_cov print(x)"},{"path":"https://iobis.github.io/obisdi/reference/print.meta_cov.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the generate_*cov group — print.meta_cov","text":"x","code":""},{"path":"https://iobis.github.io/obisdi/reference/print.meta_cov.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for the generate_*cov group — print.meta_cov","text":"printed object","code":""},{"path":"https://iobis.github.io/obisdi/reference/print.meta_person.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for the generate_meta_person — print.meta_person","title":"Print method for the generate_meta_person — print.meta_person","text":"Print method generate_meta_person","code":""},{"path":"https://iobis.github.io/obisdi/reference/print.meta_person.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for the generate_meta_person — print.meta_person","text":"","code":"# S3 method for meta_person print(x)"},{"path":"https://iobis.github.io/obisdi/reference/print.meta_person.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for the generate_meta_person — print.meta_person","text":"x object","code":""},{"path":"https://iobis.github.io/obisdi/reference/print.meta_person.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for the generate_meta_person — print.meta_person","text":"printed object","code":""}]
